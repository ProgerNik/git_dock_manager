# DocManager: Менеджер Документов на Django

Привет! Это DocManager — небольшое веб-приложение, которое я сделал на Django. Основная идея — создать простую систему для управления документами с разными уровнями доступа для пользователей.

Проект задумывался как демонстрация навыков работы с Django, включая аутентификацию, ORM, админку, Class-Based Views, а также создание REST API с помощью Django REST Framework. Ну и немного Bootstrap для внешнего вида :)

## Что тут есть?

*   **Пользователи:** Можно регистрироваться, входить в систему, выходить, менять пароль и даже сбрасывать его, если забыл.
*   **Роли и права:**
    *   **Гости (анонимы):** Могут только смотреть список документов и читать их.
    *   **Залогиненные пользователи:** Тоже смотрят, но могут получить больше прав.
    *   **Редакторы (кому админ дал права):** Могут создавать новые документы, редактировать и удалять существующие.
    *   **Админ:** Полный контроль над всем через стандартную админку Django (`/admin/`). Управляет пользователями, группами и выдает права.
*   **Документы:**
    *   Основная суть — создание, чтение, обновление и удаление (CRUD).
    *   Каждый документ может иметь автора.
    *   Есть поиск по названию и тексту документа (простенький, через `icontains`).
    *   Сортировка списка по дате создания или по названию.
    *   Пагинация, чтобы список не был бесконечным.
*   **REST API:**
    *   Для тех, кто любит работать с данными программно, есть API на `/api/documents/`.
    *   Поддерживает все стандартные методы (GET, POST, PUT, PATCH, DELETE).
    *   Доступ к изменению данных через API тоже защищен правами доступа.
*   **Внешний вид:** Старался сделать более-менее прилично с помощью Bootstrap 5.

## На чем сделано?

*   Python (3.9+)
*   Django (4.2+)
*   Django REST Framework (DRF)
*   HTML, CSS, Bootstrap 5
*   SQLite (по умолчанию, для простоты запуска)
*   Git

## Как запустить у себя?

1.  **Скачай код:**
    ```bash
    git clone https://github.com/ProgerNik/git_dock_manager.git
    cd YOUR_REPO_NAME
    ```

2.  **Настрой виртуальное окружение:**
    ```bash
    python -m venv venv
    # Windows:
    venv\Scripts\activate
    # macOS/Linux:
    source venv/bin/activate
    ```

3.  **Поставь зависимости:**
    ```bash
    pip install -r requirements.txt
    ```

4.  **Подготовь базу данных:** (Создаст таблицы для Django и наших приложений)
    ```bash
    python manage.py migrate
    ```

5.  **Создай админа:** (Чтобы зайти в `/admin/`)
    ```bash
    python manage.py createsuperuser
    ```
    (Придумай логин, email и пароль)

6.  **Запускай!**
    ```bash
    python manage.py runserver
    ```

7.  Открывай в браузере `http://127.0.0.1:8000/` и пробуй!

## ВАЖНО: Про права доступа!

По умолчанию, даже если ты залогинишься под обычным пользователем (не админом), кнопок "Создать", "Редактировать", "Удалить" не будет видно. Чтобы они появились, **администратор** должен выдать права:

1.  Зайди в админку (`/admin/`) под суперпользователем.
2.  Перейди к нужному пользователю (Users -> выбрать пользователя).
3.  В секции "User permissions" дай ему права:
    *   `documents | document | Can create document`
    *   `documents | document | Can edit document`
    *   `documents | document | Can delete document`
4.  Или создай группу ("Groups"), дай права группе и добавь пользователя туда.
5.  Сохрани.

Теперь этот пользователь сможет полноценно работать с документами.

---
Вот как-то так.